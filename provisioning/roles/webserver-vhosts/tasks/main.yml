---
- name: "ensure {{ vhost_base_directory }}{{ item.name }} is present"
  file: "path={{ vhost_base_directory }}{{ item.name }} state=directory"
  with_items: vhosts

- name: "update owner of /var/www/vhosts/{{ item.name }}"
  file: "path={{ vhost_base_directory }}{{ item.name }} owner={{ item.app_user }} group=www-data mode=0750 state=directory"
  with_items: vhosts

- name: "ensure {{ vhost_base_directory }}{{ item.name }} sub directory are present"
  file: "path={{ vhost_base_directory }}{{ item.name }} state=directory"
  with_items: vhosts

- name: "ensure {{ log_base_directory }}{{ item.name }} is present"
  file: "path={{ log_base_directory }}{{ item.name }} state=directory"
  with_items: vhosts

- name: "update owner of {{ log_base_directory }}{{ item.name }}"
  file: "path={{ log_base_directory }}{{ item.name }} owner=www-data group=adm state=directory"
  with_items: vhosts

- name: copy nginx vhost configuration
  template: src={{ item.type }}/nginx-vhost.j2 dest=/etc/nginx/sites-available/{{ item.name }}
  with_items: vhosts

- name: create php fpm pool configuration
  template: src=pool.conf.j2 dest=/etc/php5/fpm/pool.d/{{ item.name }}.conf
  with_items: vhosts
  when: item.php == True
  notify:
    - restart php-fpm

- name: destroy php fpm pool configuration
  file: path=/etc/php5/fpm/pool.d/{{ item.name }}.conf state=absent
  with_items: vhosts
  when: item.php == False or item.enabled == False
  notify:
    - restart php-fpm

- name: enable nginx vhost
  file: path=/etc/nginx/sites-enabled/{{ item.name }} src=/etc/nginx/sites-available/{{ item.name }} state=link
  with_items: vhosts
  when: item.enabled == True
  notify:
    - restart nginx

- name: disable nginx vhost
  file: path=/etc/nginx/sites-available/{{ item.name }} state=absent
  with_items: vhosts
  when: item.enabled == False
  notify:
    - restart nginx

- name: fetch application from git
  git: repo={{ item.deploy.git }} dest={{ vhost_base_directory }}{{ item.name }} version={{ item.deploy.version | default('HEAD') }} accept_hostkey=True
  with_items: vhosts
  when: item.deploy | default(False)

- name: install composer dependecies
  shell: cd {{ vhost_base_directory }}{{ item.name }} && composer install -o -q -n --prefer-source
  with_items: vhosts
  when: item.deploy and item.deploy.composer is defined
